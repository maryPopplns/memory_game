{"version":3,"sources":["assets/dragonite.png","components/loading/Loading.js","components/card/Card.js","components/game/Game.js","App.js","index.js"],"names":["Loading","id","src","dragonite","alt","Card","props","onClick","index","className","data","PICTURE","NAME","Game","useState","allCards","setAllCards","currentCards","setCurrentCards","allCurrentIndexes","setAllCurrentIndexes","selectedIndexes","setSelectedIndexes","selectedIndexesRef","useRef","level","setLevel","currentScore","setCurrentScore","window","localStorage","getItem","highScore","setHighScore","useEffect","setItem","length","prevState","cardClickHandler","event","INDEX","currentTarget","getAttribute","current","includes","console","log","forEach","CARD","NUMBER_GENERATOR","amount","RANDOM_NUMBERS","RANDOM_NUMBER","Math","floor","random","indexOf","push","STATE_SETTER","array","FINAL_STATE","number","NUMBERS","randomIndex","currentIndex","shuffle","App","isLoading","setIsLoading","setData","a","fetch","RESPONSE","json","JSON","species","name","sprites","front_shiny","DATA","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba3792f2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/dragonite.cad4251c.png\";","import dragonite from '../../assets/dragonite.png';\nimport './loading.css';\n\nexport default function Loading() {\n  return (\n    <>\n      <img id='loading_img' src={dragonite} alt='dragonite'></img>\n    </>\n  );\n}\n","import './card.css';\n\nexport default function Card(props) {\n  return (\n    <div onClick={props.onClick} index={props.index} className='pokemon_card'>\n      <img\n        className='pokemon_card_img'\n        src={props.data.PICTURE}\n        alt={props.data.NAME}\n      ></img>\n      <h2 className='pokemon_card_title'>{props.data.NAME}</h2>\n    </div>\n  );\n}\n","import { useEffect, useRef, useState } from 'react';\nimport Card from '../card/Card.js';\nimport './game.css';\n\nexport default function Game(props) {\n  const [allCards, setAllCards] = useState([]);\n  const [currentCards, setCurrentCards] = useState([]);\n  const [allCurrentIndexes, setAllCurrentIndexes] = useState([]);\n  const [selectedIndexes, setSelectedIndexes] = useState([]);\n  const selectedIndexesRef = useRef(selectedIndexes);\n  const [level, setLevel] = useState(1);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [highScore, setHighScore] = useState(\n    window.localStorage.getItem('highScore') || 0\n  );\n\n  useEffect(() => {\n    if (currentScore > highScore) {\n      setHighScore(currentScore);\n      window.localStorage.setItem('highScore', currentScore);\n    }\n  }, [currentScore, highScore]);\n\n  useEffect(() => {\n    if (\n      allCurrentIndexes.length === selectedIndexes.length &&\n      selectedIndexes.length !== 0\n    ) {\n      setLevel((prevState) => prevState + 1);\n      setSelectedIndexes([]);\n    }\n  }, [selectedIndexes, allCurrentIndexes]);\n\n  useEffect(() => {\n    function cardClickHandler(event) {\n      const INDEX = +event.currentTarget.getAttribute('index');\n\n      if (!selectedIndexesRef.current.includes(INDEX)) {\n        setSelectedIndexes((prevState) => {\n          selectedIndexesRef.current = [...prevState, INDEX];\n          return [...prevState, INDEX];\n        });\n        setCurrentScore((prevState) => prevState + 1);\n      } else {\n        setLevel(1);\n        setCurrentScore(0);\n        setSelectedIndexes([]);\n        console.log('game over');\n      }\n    }\n\n    props.data.forEach((data, index) => {\n      const CARD = (\n        <Card\n          onClick={cardClickHandler}\n          key={index}\n          index={index}\n          data={data}\n        />\n      );\n      setAllCards((prevState) => [...prevState, CARD]);\n    });\n  }, [props.data]);\n\n  useEffect(() => {\n    const NUMBER_GENERATOR = (amount) => {\n      const RANDOM_NUMBERS = [];\n      while (RANDOM_NUMBERS.length < amount) {\n        const RANDOM_NUMBER = Math.floor(Math.random() * 50);\n        if (RANDOM_NUMBERS.indexOf(RANDOM_NUMBER) === -1)\n          RANDOM_NUMBERS.push(RANDOM_NUMBER);\n      }\n      return RANDOM_NUMBERS;\n    };\n\n    const STATE_SETTER = (array) => {\n      const FINAL_STATE = [];\n      array.forEach((number) => FINAL_STATE.push(allCards[number]));\n      setCurrentCards(FINAL_STATE);\n    };\n\n    if (level === 1) {\n      const NUMBERS = NUMBER_GENERATOR(5);\n      setAllCurrentIndexes(NUMBERS);\n      STATE_SETTER(NUMBERS);\n    }\n    if (level === 2) {\n      const NUMBERS = NUMBER_GENERATOR(10);\n      setAllCurrentIndexes(NUMBERS);\n      STATE_SETTER(NUMBERS);\n    }\n    if (level === 3) {\n      const NUMBERS = NUMBER_GENERATOR(15);\n      setAllCurrentIndexes(NUMBERS);\n      STATE_SETTER(NUMBERS);\n    }\n    if (level === 4) {\n      const NUMBERS = NUMBER_GENERATOR(20);\n      setAllCurrentIndexes(NUMBERS);\n      STATE_SETTER(NUMBERS);\n    }\n    if (level === 5) {\n      const NUMBERS = NUMBER_GENERATOR(25);\n      setAllCurrentIndexes(NUMBERS);\n      STATE_SETTER(NUMBERS);\n    }\n    if (level === 6) {\n      const NUMBERS = NUMBER_GENERATOR(30);\n      setAllCurrentIndexes(NUMBERS);\n      STATE_SETTER(NUMBERS);\n    }\n    if (level === 7) {\n      const NUMBERS = NUMBER_GENERATOR(35);\n      setAllCurrentIndexes(NUMBERS);\n      STATE_SETTER(NUMBERS);\n    }\n    if (level === 8) {\n      const NUMBERS = NUMBER_GENERATOR(40);\n      setAllCurrentIndexes(NUMBERS);\n      STATE_SETTER(NUMBERS);\n    }\n    if (level === 9) {\n      const NUMBERS = NUMBER_GENERATOR(45);\n      setAllCurrentIndexes(NUMBERS);\n      STATE_SETTER(NUMBERS);\n    }\n    if (level === 10) {\n      const NUMBERS = NUMBER_GENERATOR(50);\n      setAllCurrentIndexes(NUMBERS);\n      STATE_SETTER(NUMBERS);\n    }\n  }, [level, allCards, props.data]);\n\n  function shuffle(array) {\n    let currentIndex = array.length,\n      randomIndex;\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex],\n        array[currentIndex],\n      ];\n    }\n    return array;\n  }\n\n  return (\n    <>\n      <header id='game_header'>\n        <div className='header_text' id='current_score'>\n          score: {currentScore}\n        </div>\n        <div className='header_text' id='high_score'>\n          high score: {highScore}\n        </div>\n      </header>\n      <div id='cards_container'>{shuffle(currentCards)}</div>\n    </>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport './App.css';\nimport Loading from './components/loading/Loading.js';\nimport Game from './components/game/Game.js';\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const RANDOM_NUMBERS = [];\n    while (RANDOM_NUMBERS.length < 50) {\n      const RANDOM_NUMBER = Math.floor(Math.random() * 151) + 1;\n      if (RANDOM_NUMBERS.indexOf(RANDOM_NUMBER) === -1)\n        RANDOM_NUMBERS.push(RANDOM_NUMBER);\n    }\n\n    RANDOM_NUMBERS.forEach((number, index) => {\n      (async function apiData() {\n        try {\n          const RESPONSE = await fetch(\n            `https://pokeapi.co/api/v2/pokemon/${number}`\n          );\n          const JSON = await RESPONSE.json();\n          const NAME = JSON.species.name;\n          const PICTURE = JSON.sprites.front_shiny;\n          const DATA = { NAME, PICTURE };\n          setData((prevState) => {\n            return [...prevState, DATA];\n          });\n        } catch (error) {\n          setIsLoading(false);\n          console.log(error);\n        }\n      })();\n    });\n  }, []);\n\n  useEffect(() => {\n    if (data.length === 50) {\n      setTimeout(() => {\n        setIsLoading(false);\n      }, 1000);\n    }\n  }, [data]);\n\n  return <main>{isLoading ? <Loading /> : <Game data={data} />}</main>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}